<launch>

  <!-- Multi-cameras demo with 3 D435 -->

  <!-- Choose visualization -->
  <arg name="rviz"       default="true" />
  <arg name="rtabmapviz" default="false" />
  <arg name="rgbd_odometry"     default="false"/>
  <arg name="wait_for_transform" default="0.5"/>
  <arg name="database_path"       default="/home/ridgebackbaxter/CollaborativeBaxter_ws/src/rtabmap/mapdb/RPL_multi_240719_1500.db" />
  <arg name="localization" default="true"/>
  <arg name="args" default=""/>

  <!-- Enable HW Sync via RS2 API -->
  <!-- <arg name="hw_sync" default="false"/>
  <group if="$(arg hw_sync)">
    <include file="/home/thib/realsenseTests_ws/src/hw_sync/launch/hw_sync.launch" />
  </group> -->
   <!-- sync rgb/depth images per camera -->

  <!-- Merging laser scans to /multi/scan -->
  <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch"/>
  <!-- Filter front scan -->
  <!--<include file="$(find laser_filters)/examples/shadow_filter_example.launch"/>-->
  <group ns="rtabmap">

    <!-- Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">

      <param name="database_path"         type="string" value="$(arg database_path)"/>
      <!-- 3 Intel RealSense D435 -->
      <param name="rgbd_cameras"     type="int"    value="3"/>
      <remap from="rgbd_image0"       to="/camera1/rgbd_image"/>
      <remap from="rgbd_image1"       to="/camera2/rgbd_image"/>
      <remap from="rgbd_image2"       to="/camera3/rgbd_image"/>

      <param name="frame_id"         type="string" value="base_link"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>

      <param name="subscribe_depth"  type="bool"   value="false"/>
      <param name="subscribe_rgbd"   type="bool"   value="true"/>
      <param name="subscribe_scan" type="bool" value="true"/>

      <param name="use_action_for_goal" type="bool" value="true"/>
      <remap from="move_base" to="/move_base"/>
      <remap from="grid_map"        to="/map"/>
      <remap from="goal_out"  to="current_goal"/>

      <remap from="odom" to="/odometry/filtered"/>
      <remap from="scan" to="/multi/scan"/>
      <param unless="$(arg rgbd_odometry)" name="odom_frame_id" value="odom"/>
      <param unless="$(arg rgbd_odometry)" name="odom_tf_linear_variance" value="0.001"/>
      <param unless="$(arg rgbd_odometry)" name="odom_tf_angular_variance" value="0.001"/>

      <param name="queue_size" type="int" value="50"/>

      <!-- RTAB-Map's parameters -->
      <param name="Rtabmap/DetectionRate"           type="string" value="5"/> <!-- increase DetectionRate to 2 Hz instead of 1 Hz -->

      <param name="RGBD/NeighborLinkRefining"       type="string" value="false"/>  <!-- Correct odometry using the input lidar topic using ICP -->
      <param name="RGBD/ProximityBySpace"           type="string" value="true"/>  <!-- Find local loop closures based on the robot position in the map -->
      <param name="RGBD/AngularUpdate"              type="string" value="0.1"/>  <!-- The robot should move to update the map -->
      <param name="RGBD/LinearUpdate"               type="string" value="0.1"/>  <!-- The robot should move to update the map -->
      <param name="RGBD/OptimizeFromGraphEnd"       type="string" value="false"/> <!-- On loop closures the graph will be optimized from the first pose in the map  (so /odom and /map will always match together) -->
      <param name="Grid/FromDepth"                  type="string" value="true"/> <!-- If true, the occupancy grid is created from the cloud generated by the depth camera. If false, the occupancy grid is created from the laser scans. -->
      <param name="GridGlobal/MinSize"              type="int" value="50" />    <!-- Minimum map size (m) -->
      <param name="Reg/Force3DoF"                   type="bool" value="true"/>  <!-- Force 3DoF registration: roll, pitch and z won't be estimated -->
      <param name="Reg/Strategy"                    type="string" value="2"/>     <!-- 1=ICP (refine global loop closures found with ICP using the laser scans) -->
      <param name="Grid/MaxObstacleHeight"          type="string" value="1.5"/>
      <!-- Test new parameters -->
      <param name="RGBD/OptimizeMaxError"           type="string" value="5"  /> <!--  rtabmap rejecting loop closures that screw up too much the map -->
      <param name="Grid/3D"                         type="string" value="false" />    <!-- Octomap support. -->
      <param name="Grid/MaxGroundHeight"            type="string" value="0.02"/>

      <param name="Grid/NoiseFilteringRadius"       type="string" value="0.0"/> <!-- Noise filtering radius (0=disabled). Done after segmentation. -->
      <param name="Grid/NoiseFilteringMinNeighbors" type="string" value="1" /> <!-- Noise filtering minimum neighbors. -->

      <!-- ICP parameters -->
      <param name="Icp/CorrespondenceRatio"         type="string" value="0.1"/> <!-- Maximum distance between points during registration by ICP -->
      <param name="RGBD/SavedLocalizationIgnored"   type="string" value="true"/>
      <param name="Icp/MaxRotation"                 type="string" value="0.1"/>
      <param name="Icp/MaxTranslation"              type="string" value="0.05"/>
      <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
      <param name="Icp/CorrespondenceRatio"      type="string" value="0.1"/>
      <param name="Vis/MinInliers"               type="string" value="30"/>      <!-- 3D visual words minimum inliers to accept loop closure -->
      <param name="Vis/InlierDistance"           type="string" value="0.1"/>    <!-- 3 visual words correspondence distance -->
      <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/>
      <param name="Rtabmap/TimeThr"              type="string" value="0"/>
      <param name="Mem/RehearsalSimilarity"      type="string" value="0.45"/>

      <param name="Vis/EstimationType" type="string" value="0"/>

      <param name="Mem/IncrementalMemory"  type="string" value="false"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="true"/>

  </node>


  <!-- Visualisation RTAB-Map -->
  <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
    <param name="rgbd_cameras"       type="int"    value="3"/>
    <remap from="rgbd_image0"       to="/camera1/rgbd_image"/>
    <remap from="rgbd_image1"       to="/camera2/rgbd_image"/>
    <remap from="rgbd_image2"       to="/camera3/rgbd_image"/>
  <remap from="odom" to="/odometry/filtered"/>
  <remap from="scan" to="/front/scan"/>
  </node>
  </group>


  <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">

    <remap from="odom" to="odometry/filtered" />
    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

    <rosparam file="$(find ridgeback_navigation)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find ridgeback_navigation)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />

    <rosparam file="$(find ridgeback_navigation)/params/map_nav_params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find ridgeback_navigation)/params/map_nav_params/global_costmap_params.yaml" command="load" />

    <rosparam file="$(find ridgeback_navigation)/params/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find ridgeback_navigation)/params/navfn_global_planner_params.yaml" command="load" />
    <rosparam file="$(find ridgeback_navigation)/params/move_base_params.yaml" command="load" />

  </node>


  <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/config/ridgeback_navigation.rviz"/>

</launch>
